name: Java CI - All Microservices and Backend

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  build-all:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: "baza"
          POSTGRES_USER: "user"
          POSTGRES_PASSWORD: "password"
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U user"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
      SPRING_DATASOURCE_USERNAME: ${{ secrets.POSTGRES_USER }}
      SPRING_DATASOURCE_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      APP_SECRETS: ${{ secrets.APPLICATION_SECRETS_PROPERTIES_CONTENT }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Prepare application-secrets.properties
        if: env.APP_SECRETS != ''
        run: |
          # Backend
          mkdir -p ./backend/src/test/resources/
          echo "$APP_SECRETS" > ./backend/src/test/resources/application-secrets.properties
          # Microservice Notifications
          mkdir -p ./microservice-notifications/src/test/resources/
          echo "$APP_SECRETS" > ./microservice-notifications/src/test/resources/application-secrets.properties
          # Microservice Chat
          mkdir -p ./microservice-chat/src/test/resources/
          echo "$APP_SECRETS" > ./microservice-chat/src/test/resources/application-secrets.properties

      - name: Wait for PostgreSQL
        run: |
          until pg_isready -h localhost -p 5432 -U ${{ secrets.POSTGRES_USER }}; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 5
          done

      - name: Build backend
        run: mvn -B clean verify
        working-directory: ./backend

      - name: Build microservice-shared
        run: mvn -B clean install -DskipTests
        working-directory: ./microservice-shared

      - name: Build microservice-notifications
        run: mvn -B clean verify -DskipTests
        working-directory: ./microservice-notifications

      - name: Build microservice-chat
        run: mvn -B clean verify -DskipTests
        working-directory: ./microservice-chat