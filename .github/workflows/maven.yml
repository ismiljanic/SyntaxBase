name: Java CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  build-backend:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: ${{ secrets.POSTGRES_DB_NAME }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U user"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
      SPRING_DATASOURCE_USERNAME: ${{ secrets.POSTGRES_USER }}
      SPRING_DATASOURCE_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      APP_SECRETS: ${{ secrets.APPLICATION_SECRETS_PROPERTIES_CONTENT }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Prepare application-secrets.properties (optional)
        if: env.APP_SECRETS != ''
        run: |
          mkdir -p ./backend/src/test/resources/
          echo "$APP_SECRETS" > ./backend/src/test/resources/application-secrets.properties

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -p 5432 -U user; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 5
          done

      - name: Run unit tests
        run: mvn -B clean test
        working-directory: ./backend

      - name: Run full build + integration tests
        run: mvn -B clean verify
        working-directory: ./backend

  build-microservice-notifications:
    runs-on: ubuntu-latest
    needs: build-backend

    env:
      SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
      SPRING_DATASOURCE_USERNAME: ${{ secrets.POSTGRES_USER }}
      SPRING_DATASOURCE_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      APP_SECRETS: ${{ secrets.APPLICATION_SECRETS_PROPERTIES_CONTENT }}

    steps:
      - name: Checkout microservice branch
        uses: actions/checkout@v4
        with:
          ref: microservice/notifications

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Prepare application-secrets.properties (optional)
        if: env.APP_SECRETS != ''
        run: |
          mkdir -p ./microservice-notifications/src/test/resources/
          echo "$APP_SECRETS" > ./microservice-notifications/src/test/resources/application-secrets.properties

      - name: Run unit tests
        run: mvn -B clean test
        working-directory: ./microservice-notifications

      - name: Run full build + integration tests
        run: mvn -B clean verify
        working-directory: ./microservice-notifications